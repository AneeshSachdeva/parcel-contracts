/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ParcelV2, ParcelV2Interface } from "../ParcelV2";

const _abi = [
  {
    inputs: [],
    name: "AccessDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "ParcelNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "SecretIsNotUnique",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenTransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "ParcelCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
    ],
    name: "addEth",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "addNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedSecret",
        type: "bytes32",
      },
    ],
    name: "newParcel",
    outputs: [
      {
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "parcelId",
        type: "uint256",
      },
    ],
    name: "parcelExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "parcelsFromAddr",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110a7806100206000396000f3fe6080604052600436106100705760003560e01c806395b258691161004e57806395b258691461010b578063aef1f52914610134578063b27f587e14610171578063ffb7cf62146101ae57610070565b8063150b7a02146100755780634c8a2bcf146100b25780636708ec14146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190610c33565b6101d7565b6040516100a99190610ea1565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190610d18565b6103cb565b6040516100e69190610ebc565b60405180910390f35b61010960048036038101906101049190610d41565b610549565b005b34801561011757600080fd5b50610132600480360381019061012d9190610d6a565b610672565b005b34801561014057600080fd5b5061015b60048036038101906101569190610d41565b61083a565b6040516101689190610e86565b60405180910390f35b34801561017d57600080fd5b5061019860048036038101906101939190610cb3565b610878565b6040516101a59190610ebc565b60405180910390f35b3480156101ba57600080fd5b506101d560048036038101906101d09190610d6a565b6108a9565b005b600080600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000205490506000811415801561029f57506002600082815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16145b6102a857600080fd5b6002600082815260200190815260200160002060080160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002085908060018154018082558091505060019003906000526020600020016000909190919091505560026000828152602001908152602001600020600901879080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103b760026000838152602001908152602001600020600a01610b71565b63150b7a0260e01b91505095945050505050565b60008033836040516020016103e1929190610e23565b6040516020818303038152906040528051906020012090506000600160008381526020019081526020016000205414610446576040517f6abfc6b500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104506003610b71565b61045a6003610b87565b9150600060026000848152602001908152602001600020905060018160000160006101000a81548160ff0219169083151502179055508181600101819055506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150506001900390600052602060002001600090919091909150558260016000848152602001908152602001600020819055507f8e07247ac5237ec1133e79714365e56d8144a3bd135c27643f411ed1a7f167fb60405160405180910390a15050919050565b806002600082815260200190815260200160002060000160009054906101000a900460ff166105a4576040517f91ec8c7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610640576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346002600085815260200190815260200160002060040160008282546106669190610ed7565b92505081905550505050565b826002600082815260200190815260200160002060000160009054906101000a900460ff166106cd576040517f91ec8c7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610769576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b84600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008581526020019081526020016000208190555060008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b815260040161080093929190610e4f565b600060405180830381600087803b15801561081a57600080fd5b505af115801561082e573d6000803e3d6000fd5b50505050505050505050565b60006002600083815260200190815260200160002060000160009054906101000a900460ff161561086e5760019050610873565b600090505b919050565b6000602052816000526040600020818154811061089457600080fd5b90600052602060002001600091509150505481565b826002600082815260200190815260200160002060000160009054906101000a900460ff16610904576040517f91ec8c7600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b833373ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109a0576040517f4ca8886700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008490508073ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016109e293929190610e4f565b602060405180830381600087803b1580156109fc57600080fd5b505af1158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190610cef565b610a6a576040517f045c4b0200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b836002600088815260200190815260200160002060050160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610acd9190610ed7565b9250508190555060026000878152602001908152602001600020600601859080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b6960026000888152602001908152602001600020600701610b71565b505050505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b600081359050610ba481611015565b92915050565b600081519050610bb98161102c565b92915050565b600081359050610bce81611043565b92915050565b60008083601f840112610be657600080fd5b8235905067ffffffffffffffff811115610bff57600080fd5b602083019150836001820283011115610c1757600080fd5b9250929050565b600081359050610c2d8161105a565b92915050565b600080600080600060808688031215610c4b57600080fd5b6000610c5988828901610b95565b9550506020610c6a88828901610b95565b9450506040610c7b88828901610c1e565b935050606086013567ffffffffffffffff811115610c9857600080fd5b610ca488828901610bd4565b92509250509295509295909350565b60008060408385031215610cc657600080fd5b6000610cd485828601610b95565b9250506020610ce585828601610c1e565b9150509250929050565b600060208284031215610d0157600080fd5b6000610d0f84828501610baa565b91505092915050565b600060208284031215610d2a57600080fd5b6000610d3884828501610bbf565b91505092915050565b600060208284031215610d5357600080fd5b6000610d6184828501610c1e565b91505092915050565b600080600060608486031215610d7f57600080fd5b6000610d8d86828701610c1e565b9350506020610d9e86828701610b95565b9250506040610daf86828701610c1e565b9150509250925092565b610dc281610f2d565b82525050565b610dd9610dd482610f2d565b610fab565b82525050565b610de881610f3f565b82525050565b610dff610dfa82610f4b565b610fbd565b82525050565b610e0e81610f55565b82525050565b610e1d81610fa1565b82525050565b6000610e2f8285610dc8565b601482019150610e3f8284610dee565b6020820191508190509392505050565b6000606082019050610e646000830186610db9565b610e716020830185610db9565b610e7e6040830184610e14565b949350505050565b6000602082019050610e9b6000830184610ddf565b92915050565b6000602082019050610eb66000830184610e05565b92915050565b6000602082019050610ed16000830184610e14565b92915050565b6000610ee282610fa1565b9150610eed83610fa1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f2257610f21610fd9565b5b828201905092915050565b6000610f3882610f81565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610fb682610fc7565b9050919050565b6000819050919050565b6000610fd282611008565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160601b9050919050565b61101e81610f2d565b811461102957600080fd5b50565b61103581610f3f565b811461104057600080fd5b50565b61104c81610f4b565b811461105757600080fd5b50565b61106381610fa1565b811461106e57600080fd5b5056fea26469706673582212207777723fea585c2a8b543367de276c8c5e1aa38df888bf1950d9aa000140eabf64736f6c63430008040033";

type ParcelV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParcelV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ParcelV2__factory extends ContractFactory {
  constructor(...args: ParcelV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ParcelV2> {
    return super.deploy(overrides || {}) as Promise<ParcelV2>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ParcelV2 {
    return super.attach(address) as ParcelV2;
  }
  connect(signer: Signer): ParcelV2__factory {
    return super.connect(signer) as ParcelV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParcelV2Interface {
    return new utils.Interface(_abi) as ParcelV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParcelV2 {
    return new Contract(address, _abi, signerOrProvider) as ParcelV2;
  }
}
