/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BytesLike,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Parcel, ParcelInterface } from "../Parcel";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashedSecret_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidState",
    type: "error",
  },
  {
    inputs: [],
    name: "ParcelIsLocked",
    type: "error",
  },
  {
    inputs: [],
    name: "PermissionDenied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ParcelEmptied",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ethBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isCommunal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "makeCommunal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfts",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "secret",
        type: "bytes",
      },
    ],
    name: "open",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "enum Parcel.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newHashedSecret",
        type: "bytes32",
      },
    ],
    name: "updateHashedSecret",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021593803806200215983398181016040528101906200003791906200009d565b33600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060058190555050620000ed565b6000815190506200009781620000d3565b92915050565b600060208284031215620000b057600080fd5b6000620000c08482850162000086565b91505092915050565b6000819050919050565b620000de81620000c9565b8114620000ea57600080fd5b50565b61205c80620000fd6000396000f3fe6080604052600436106100c65760003560e01c80634e6630b01161007f5780637e10a5ac116100595780637e10a5ac1461058b578063c19d93fb146105a2578063e42c08f2146105cd578063f83d08ba1461060a5761025a565b80634e6630b01461050c5780636039fbdb1461053757806367e404ce146105605761025a565b8063150b7a02146103e95780631bb49e24146104265780632524f9a314610451578063265aa6211461047a578063382f431b146104b8578063433f0f18146104e15761025a565b3661025a5760006002811115610105577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff16600281111561014b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461018b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018290611a69565b60405180910390fd5b600060019054906101000a900460ff161580156101f65750600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b1561023f5761020433610621565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610236906119c9565b60405180910390fd5b34600160008282546102519190611b56565b92505081905550005b60006002811115610294577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff1660028111156102da577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b1461031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031190611a69565b60405180910390fd5b600060019054906101000a900460ff161580156103855750600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156103ce5761039333610621565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c5906119c9565b60405180910390fd5b34600160008282546103e09190611b56565b92505081905550005b3480156103f557600080fd5b50610410600480360381019061040b919061156a565b6106ba565b60405161041d9190611973565b60405180910390f35b34801561043257600080fd5b5061043b61081b565b6040516104489190611ac9565b60405180910390f35b34801561045d57600080fd5b506104786004803603810190610473919061164a565b610828565b005b34801561048657600080fd5b506104a1600480360381019061049c91906116b8565b6108c2565b6040516104af92919061192f565b60405180910390f35b3480156104c457600080fd5b506104df60048036038101906104da9190611673565b610916565b005b3480156104ed57600080fd5b506104f6610d94565b6040516105039190611958565b60405180910390f35b34801561051857600080fd5b50610521610da7565b60405161052e9190611ac9565b60405180910390f35b34801561054357600080fd5b5061055e600480360381019061055991906115e5565b610dad565b005b34801561056c57600080fd5b50610575611101565b60405161058291906118dd565b60405180910390f35b34801561059757600080fd5b506105a0611127565b005b3480156105ae57600080fd5b506105b76111d4565b6040516105c4919061198e565b60405180910390f35b3480156105d957600080fd5b506105f460048036038101906105ef9190611541565b6111e5565b6040516106019190611ac9565b60405180910390f35b34801561061657600080fd5b5061061f6111fd565b005b6106b78160405160240161063591906118dd565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506112df565b50565b60008060019054906101000a900460ff1661076057600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161461075f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075690611a49565b60405180910390fd5b5b600460405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200185815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155505063150b7a0260e01b9050949350505050565b6000600480549050905090565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108af90611aa9565b60405180910390fd5b8060058190555050565b600481815481106108d257600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b60016002811115610950577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff166002811115610996577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b146109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd906119e9565b60405180910390fd5b81816040516109e69291906118af565b604051809103902060055414610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2890611a89565b60405180910390fd5b60026000806101000a81548160ff02191690836002811115610a7c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060006001541115610b4a5760006001549050600060018190555060003373ffffffffffffffffffffffffffffffffffffffff1682604051610ac1906118c8565b60006040518083038185875af1925050503d8060008114610afe576040519150601f19603f3d011682016040523d82523d6000602084013e610b03565b606091505b5050905080610b47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3e90611a29565b60405180910390fd5b50505b60006003805490501115610c375760005b600380549050811015610c3557600060038281548110610ba4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610c20823383611308565b50508080610c2d90611cc3565b915050610b5b565b505b60005b600480549050811015610d8f57600060048281548110610c83577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152505090506000816000015190508073ffffffffffffffffffffffffffffffffffffffff166323b872dd303385602001516040518463ffffffff1660e01b8152600401610d48939291906118f8565b600060405180830381600087803b158015610d6257600080fd5b505af1158015610d76573d6000803e3d6000fd5b5050505050508080610d8790611cc3565b915050610c3a565b505050565b600060019054906101000a900460ff1681565b60015481565b60006002811115610de7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008054906101000a900460ff166002811115610e2d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14610e6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6490611a69565b60405180910390fd5b600060019054906101000a900460ff16158015610ed85750600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610f2157610ee633610621565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f18906119c9565b60405180910390fd5b600082905060008173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610f65939291906118f8565b602060405180830381600087803b158015610f7f57600080fd5b505af1158015610f93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb79190611621565b905080610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff0906119a9565b60405180910390fd5b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414156110a5576003849080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b82600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110f49190611b56565b9250508190555050505050565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146111b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111ae90611aa9565b60405180910390fd5b6001600060016101000a81548160ff021916908315150217905550565b60008054906101000a900460ff1681565b60026020528060005260406000206000915090505481565b600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461128d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128490611aa9565b60405180910390fd5b60016000806101000a81548160ff021916908360028111156112d8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b0217905550565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546113579190611bac565b92505081905550600083905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040518363ffffffff1660e01b81526004016113a092919061192f565b602060405180830381600087803b1580156113ba57600080fd5b505af11580156113ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113f29190611621565b905080611434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142b90611a09565b60405180910390fd5b5050505050565b600061144e61144984611b09565b611ae4565b90508281526020810184848401111561146657600080fd5b611471848285611c83565b509392505050565b60008135905061148881611fca565b92915050565b60008151905061149d81611fe1565b92915050565b6000813590506114b281611ff8565b92915050565b60008083601f8401126114ca57600080fd5b8235905067ffffffffffffffff8111156114e357600080fd5b6020830191508360018202830111156114fb57600080fd5b9250929050565b600082601f83011261151357600080fd5b813561152384826020860161143b565b91505092915050565b60008135905061153b8161200f565b92915050565b60006020828403121561155357600080fd5b600061156184828501611479565b91505092915050565b6000806000806080858703121561158057600080fd5b600061158e87828801611479565b945050602061159f87828801611479565b93505060406115b08782880161152c565b925050606085013567ffffffffffffffff8111156115cd57600080fd5b6115d987828801611502565b91505092959194509250565b600080604083850312156115f857600080fd5b600061160685828601611479565b92505060206116178582860161152c565b9150509250929050565b60006020828403121561163357600080fd5b60006116418482850161148e565b91505092915050565b60006020828403121561165c57600080fd5b600061166a848285016114a3565b91505092915050565b6000806020838503121561168657600080fd5b600083013567ffffffffffffffff8111156116a057600080fd5b6116ac858286016114b8565b92509250509250929050565b6000602082840312156116ca57600080fd5b60006116d88482850161152c565b91505092915050565b6116ea81611be0565b82525050565b6116f981611bf2565b82525050565b61170881611c08565b82525050565b600061171a8385611b3a565b9350611727838584611c83565b82840190509392505050565b61173c81611c71565b82525050565b600061174f602483611b45565b915061175a82611daa565b604082019050919050565b6000611772603483611b45565b915061177d82611df9565b604082019050919050565b6000611795600e83611b45565b91506117a082611e48565b602082019050919050565b60006117b8601283611b45565b91506117c382611e71565b602082019050919050565b60006117db601483611b45565b91506117e682611e9a565b602082019050919050565b60006117fe602283611b45565b915061180982611ec3565b604082019050919050565b6000611821601c83611b45565b915061182c82611f12565b602082019050919050565b6000611844600083611b3a565b915061184f82611f3b565b600082019050919050565b6000611867601183611b45565b915061187282611f3e565b602082019050919050565b600061188a602583611b45565b915061189582611f67565b604082019050919050565b6118a981611c67565b82525050565b60006118bc82848661170e565b91508190509392505050565b60006118d382611837565b9150819050919050565b60006020820190506118f260008301846116e1565b92915050565b600060608201905061190d60008301866116e1565b61191a60208301856116e1565b61192760408301846118a0565b949350505050565b600060408201905061194460008301856116e1565b61195160208301846118a0565b9392505050565b600060208201905061196d60008301846116f0565b92915050565b600060208201905061198860008301846116ff565b92915050565b60006020820190506119a36000830184611733565b92915050565b600060208201905081810360008301526119c281611742565b9050919050565b600060208201905081810360008301526119e281611765565b9050919050565b60006020820190508181036000830152611a0281611788565b9050919050565b60006020820190508181036000830152611a22816117ab565b9050919050565b60006020820190508181036000830152611a42816117ce565b9050919050565b60006020820190508181036000830152611a62816117f1565b9050919050565b60006020820190508181036000830152611a8281611814565b9050919050565b60006020820190508181036000830152611aa28161185a565b9050919050565b60006020820190508181036000830152611ac28161187d565b9050919050565b6000602082019050611ade60008301846118a0565b92915050565b6000611aee611aff565b9050611afa8282611c92565b919050565b6000604051905090565b600067ffffffffffffffff821115611b2457611b23611d6a565b5b611b2d82611d99565b9050602081019050919050565b600081905092915050565b600082825260208201905092915050565b6000611b6182611c67565b9150611b6c83611c67565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ba157611ba0611d0c565b5b828201905092915050565b6000611bb782611c67565b9150611bc283611c67565b925082821015611bd557611bd4611d0c565b5b828203905092915050565b6000611beb82611c47565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050611c4282611fb6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611c7c82611c34565b9050919050565b82818337600083830152505050565b611c9b82611d99565b810181811067ffffffffffffffff82111715611cba57611cb9611d6a565b5b80604052505050565b6000611cce82611c67565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611d0157611d00611d0c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f546f6b656e73206661696c656420746f207472616e7366657220746f2070617260008201527f63656c2e00000000000000000000000000000000000000000000000000000000602082015250565b7f50617263656c206973206e6f7420636f6d6d756e616c20616e642063616e6e6f60008201527f742061636365707420796f75722061737365742e000000000000000000000000602082015250565b7f496e76616c69642073746174652e000000000000000000000000000000000000600082015250565b7f4661696c656420746f207472616e736665720000000000000000000000000000600082015250565b7f455448207472616e73666572206661696c65642e000000000000000000000000600082015250565b7f43616e6e6f7420616363657074204e46542066726f6d2074686973206f776e6560008201527f722e000000000000000000000000000000000000000000000000000000000000602082015250565b7f50617263656c2063616e27742072656365697665206173736574732e00000000600082015250565b50565b7f496e636f7272656374207365637265742e000000000000000000000000000000600082015250565b7f4f6e6c79207468652070617263656c2073656e6465722063616e2063616c6c2060008201527f746869732e000000000000000000000000000000000000000000000000000000602082015250565b60038110611fc757611fc6611d3b565b5b50565b611fd381611be0565b8114611fde57600080fd5b50565b611fea81611bf2565b8114611ff557600080fd5b50565b61200181611bfe565b811461200c57600080fd5b50565b61201881611c67565b811461202357600080fd5b5056fea2646970667358221220d8fe30cf75478812fd525457a1c616023c1a7f7b3413c3c673d96f1925e5e06064736f6c63430008040033";

type ParcelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParcelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Parcel__factory extends ContractFactory {
  constructor(...args: ParcelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hashedSecret_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Parcel> {
    return super.deploy(hashedSecret_, overrides || {}) as Promise<Parcel>;
  }
  getDeployTransaction(
    hashedSecret_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hashedSecret_, overrides || {});
  }
  attach(address: string): Parcel {
    return super.attach(address) as Parcel;
  }
  connect(signer: Signer): Parcel__factory {
    return super.connect(signer) as Parcel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParcelInterface {
    return new utils.Interface(_abi) as ParcelInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Parcel {
    return new Contract(address, _abi, signerOrProvider) as Parcel;
  }
}
